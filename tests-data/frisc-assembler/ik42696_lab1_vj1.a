; Zadatak 1, Ivan Krišto 0036426969

		MOVE 1000, R0		; R0 čuva adresu čitanja
		MOVE 504, R1		; R1 čuva adresu pisanja
		MOVE 0, R5			; R5 broji koliko je podataka zapisano
	
PETLJA 	LOADH R2, (R0)		; učitavanje 16-bitnog podatka
		ADD R0, 2, R0		; u R0 stavljamo adresu slj. 16b podatka
		CMP R2, 8000		
		JR_EQ KRAJ			; ako nije učitan krajnji podatak, nastavi
		ADD R5, 1, R5		; povešavamo brojač obrađenih podataka
		AND R4, 0, R4		; reset R4 (njega poslije koristimo za pohranu gornja 32b)
		AND R2, MASKA_1, R6	; ostavljamo jedino predznak, a R6 nam je nebitan reg.
		JP_Z POPUNJAVANJE	; ako je učitan negativan broj, nastavi
		OR R4, 1, R4		; postavljanje predzanak '1' (1. korak)
		ROTR R4, 1, R4		; postavljanje predzanak '1' (2. korak)
		XOR R2, MASKA_2, R2	; 2'k -> NBC, 1. korak
		ADD R2, 1, R2		; 2'k -> NBC, 2. korak
		
POPUNJAVANJE	STORE R2, (R1)	; upisujemo niži dio 64b podatka
			ADD R1, 4, R1	; povešavamo adr. za upis slj. 32b broja
			STORE R4, (R1)	; upisujemo viši dio 64b podatka
			ADD R1, 4, R1	; povećavamo adr. za upis slj. 32b broja
			JP PETLJA
		
		
KRAJ		STORE R5, (500)
			HALT
	
MASKA_1	`EQU 8000			; maska za izoliranje predznaka podatka
MASKA_2	`EQU 0FFFF			; maska za komplementiranje donjih bitova podatka
		`ORG 1000			; unos test podataka u memoriju (od adrese 1000)
		`BASE D
		DH -1, 3, -4, 48, -96, %H 8000
